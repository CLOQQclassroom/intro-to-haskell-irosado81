# vim:ft=gitconfig set ts=2 sw=2 tw=0 et

[user]
  signingkey = 3BF9D1AE
  name = Mark Tareshawty
  email = mark@marktareshawty.com
  username = tarebyte

[alias]
  a             =  add
  br            =  branch
  c             =  commit -m
  ci            =  commit
  co            =  checkout
  cob           =  checkout -b
  cleanup       =  !git remote prune origin && git gc && git clean -dfx && git stash clear
  create-branch =  !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  delete-branch =  !sh -c 'git push origin :refs/heads/$1 && git remote prune origin && git branch -D $1' -
  pr            =  !hub pull-request
  d             =  difftool
  dump          =  cat-file -p
  merge-branch  =  !git checkout master && git merge @{-1}
  l             =  "!source ~/.githelpers && pretty_git_log"
  la            =  !git l --all
  po            =  push origin
  pom           =  push origin master
  phm           =  push heroku master
  r             =  !git l -30
  ra            =  !git r --all
  sc            =  commit -S -m
  sci           =  commit -S
  st            =  status -sb
  today         =  log --since=midnight --author='Mark Tareshawty' --oneline
  type          =  cat-file -t
  up            =  !sh -c 'git pull --rebase --prune && git log --pretty=format:\"%Cred%ae %Creset- %C(yellow)%s %Creset(%ar)\" HEAD@{1}..'
  who           =  shortlog -n -s --no-merges
  g             =  grep --break --heading --line-number
  unadd         =  reset

[color]
  branch=auto
  diff=auto
  interactive=auto
  status=auto

[github]
  user = tarebyte

[hub]
  protocol = https

[credential]
  whitespace = trailing-space,space-before-tab,indent-with-non-tab
  editor = vim
  helper = osxkeychain

[core]
  editor = vim
  excludesfile = /Users/mark/.gitignore_global
  whitespace = trailing-space,space-before-tab,indent-with-non-tab

[push]
  default = current

[diff]
  tool = vimdiff

[difftool]
  prompt = false

[filter "media"]
  clean = git-media-clean %f
  smudge = git-media-smudge %f

[filter "lfs"]
  clean = git lfs clean %f
  smudge = git lfs smudge %f
  required = true
