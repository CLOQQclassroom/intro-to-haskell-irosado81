#!/usr/bin/env ruby
# frozen_string_literal: true
# To run in dev: ./delete_all_repos_for tarebyte dev token
# To run on non production environment (branch-lab):
#   ./delete_all_repos_for tarebyte deployments-not-attached-to-prs.branch token
# To run in production: ./delete_all_repos_for tarebyte prod token

require 'awesome_print'
require 'pry'
require 'octokit'

if ARGV.count < 2
  ap 'Error needs two arguments'
  exit 1
end

actor        = ARGV.shift
environment  = ARGV.shift
access_token = ARGV.shift

if environment == 'dev'
  Octokit.configure do |c|
    c.api_endpoint = 'http://api.github.dev'
    c.web_endpoint = 'http://github.dev'
  end
end

token = environment == 'dev' ? 'GITHUB_DEV_TOKEN' : 'GITHUB_TOKEN'

access_token ||= ENV[token]

gh_client = Octokit::Client.new(access_token: access_token, auto_paginate: true)

begin
  github_actor = gh_client.user(actor)
  github_actor = gh_client.org(actor) if github_actor.type == 'Organization'
rescue Octokit::Error => e
  ap e
end

ap "DELETING REPOSITORIES FOR #{github_actor.login} IN #{environment}"
ap 'Are you sure you want to do this??'
ap 'Once you confirm there is not going back'
ap 'PLEASE PRESS ANY KEY TO CONFIRM...'

STDIN.gets

if github_actor.type == 'Organization'
  gh_client.org_repos(github_actor.login)
else
  gh_client.repos(github_actor.login)
end.each do |repo|
  ap gh_client.delete_repo(repo.full_name)
end
