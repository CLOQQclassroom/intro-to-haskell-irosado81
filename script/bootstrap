#!/usr/bin/env bash
#
# bootstrap installs things.
# modified from https://github.com/holman/dotfiles

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd)
BIN_ROOT="$DOTFILES_ROOT/bin"

set -e

echo ''

info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
    then

      local currentSrc="$(readlink $dst)"

      if [ "$currentSrc" == "$src" ]
      then

        skip=true;

      else

        user "File already exists: $(basename "$src"), what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac

      fi

    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" == "true" ]
    then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$backup" == "true" ]
    then
      mv "$dst" "${dst}.backup"
      success "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" == "true" ]
    then
      success "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    ln -s "$1" "$2"
    success "linked $1 to $2"
  fi
}

install_dotfiles () {
  info 'installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink')
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

install_bin_files () {
  info 'installing bin executables'

  if [ ! -d "$HOME/bin" ]; then
    mkdir -p ~/bin
  fi

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find "$BIN_ROOT" -mindepth 1 -name '*')
  do
    dst="$HOME/bin/$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done

}

install_oh_my_zsh () {
  if [ ! -d "$HOME/.oh-my-zsh" ]; then
    # Set shell to zsh
    chsh -s /bin/zsh

    git clone https://github.com/tarebyte/oh-my-zsh.git $HOME/.oh-my-zsh
    cd $HOME/.oh-my-zsh
    git remote rename origin tarebyte
    git remote add origin git@github.com:robbyrussell/oh-my-zsh.git
    cd $DOTFILES_ROOT
  fi
}

install_neo_bundle () {
  if [ ! -d "$HOME/.vim/bundle" ]; then
    mkdir -p ~/.vim/bundle
    if [ ! -d "$HOME/.vim/bundle/neobundle.vim" ]; then
      git clone https://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim
    fi
  fi
}

install_base16 () {
  if [ ! -d "$HOME/.config" ]; then
    mkdir -p ~/.config
  fi

  git clone https://github.com/chriskempson/base16-shell.git ~/.config/base16-shell
}

install_base16
install_oh_my_zsh
install_dotfiles
install_neo_bundle
install_bin_files

echo ''
echo '  All installed!'
