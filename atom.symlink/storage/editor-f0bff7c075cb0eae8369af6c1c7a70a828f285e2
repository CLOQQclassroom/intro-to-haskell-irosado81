{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":1440,"height":874},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/mark/src/education/teachers_pet","buffers":[{"text":"require 'spec_helper'\n\ndescribe TeachersPet::Actions::Base do\n  describe '#octokit_config' do\n    it \"complains if the password and token are missing\" do\n      action = TeachersPet::Actions::Base.new\n      expect {\n        action.octokit_config\n      }.to raise_error(Thor::RequiredArgumentMissingError, /--password.+--token/)\n    end\n\n    it \"uses the password if provided\" do\n      action = TeachersPet::Actions::Base.new(password: 'abc123')\n      expect(action.octokit_config[:password]).to eq('abc123')\n    end\n\n    it \"uses the token if provided\" do\n      action = TeachersPet::Actions::Base.new(token: 'abc123')\n      expect(action.octokit_config[:access_token]).to eq('abc123')\n    end\n\n    it \"prompts for a password if the password flag is passed but the given\" do\n      action = TeachersPet::Actions::Base.new(password: '')\n      STDOUT.should_receive(:print).with('Password: ')\n    end\n\n    it \"prompts for a token if the token flag is passed but the given\" do\n      action = TeachersPet::Actions::Base.new(token: '')\n      STDOUT.should_receive(:print).with('Token: ')\n    end\n\n  end\n\n  describe '#read_file' do\n    it \"returns a hash of usernames by team name\" do\n      action = TeachersPet::Actions::Base.new\n      result = action.read_file(fixture_path('teams'))\n      expect(result).to eq(\n        'studentteam1' => %w(teststudent1 teststudent2)\n      )\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[24,0],[24,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":29,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[23,0],[23,6]],"newRange":[[23,0],[23,6]],"oldText":"      ","newText":"      ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[24,6]],"newRange":[[24,0],[24,6]],"oldText":"      ","newText":"      ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[31,0],[32,0]],"newRange":[[31,0],[31,0]],"oldText":"\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[0,0],[1,0]],"newRange":[[0,0],[0,0]],"oldText":"require 'pry'\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[28,0]],"oldText":"","newText":"      binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[1,0]],"oldText":"","newText":"require 'pry-plus'\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(token:)\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      action = TeachersPet::Actions::Base.new\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(token: nil)\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      action = TeachersPet::Actions::Base.new(token:)\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[24,0]],"newRange":[[23,0],[23,0]],"oldText":"      action = TeachersPet::Actions::Base.new(token: nil)\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      # STDOUT.should_receive(:print).with('Token: ')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      STDOUT.should_receive(:print).with('Token: ')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[28,0]],"oldText":"","newText":"      # STDOUT.should_receive(:print).with('Password: ')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[31,0]],"newRange":[[28,0],[28,0]],"oldText":"      binding.pry\n      action = TeachersPet::Actions::Base.new(password: nil)\n      STDOUT.should_receive(:print).with('Password: ')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[25,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(token: 'abc123')\n      STDOUT.should_receive(:print).with('Token: ')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[25,0],[26,0]],"newRange":[[25,0],[25,0]],"oldText":"      # STDOUT.should_receive(:print).with('Token: ')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[30,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(password: 'abc123')\n      STDOUT.should_receive(:print).with('Password: ')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[30,0],[31,0]],"newRange":[[30,0],[30,0]],"oldText":"      # STDOUT.should_receive(:print).with('Password: ')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(token: '')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      action = TeachersPet::Actions::Base.new(token: 'abc123')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[29,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(password: '')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[29,0],[30,0]],"newRange":[[29,0],[29,0]],"oldText":"      action = TeachersPet::Actions::Base.new(password: 'abc123')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[1,0]],"oldText":"","newText":"require 'pry'\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[1,0],[2,0]],"newRange":[[1,0],[1,0]],"oldText":"require 'pry-plus'\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[27,0]],"oldText":"","newText":"    it \"prompts for a password if the password flag is passed but the given\" do\n      action = TeachersPet::Actions::Base.new(password: '')\n      STDOUT.should_receive(:print).with('Password: ')\n    end\n\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[32,0],[36,0]],"newRange":[[32,0],[32,0]],"oldText":"    it \"prompts for a password if the password flag is passed but the given\" do\n      action = TeachersPet::Actions::Base.new(password: '')\n      STDOUT.should_receive(:print).with('Password: ')\n    end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[25,0]],"oldText":"","newText":"      binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[29,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(token: nil)\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[29,0],[30,0]],"newRange":[[29,0],[29,0]],"oldText":"      action = TeachersPet::Actions::Base.new(token: '')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(password: nil)\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      action = TeachersPet::Actions::Base.new(password: '')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(password: 'sdf')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      action = TeachersPet::Actions::Base.new(password: nil)\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[29,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(token: 'sdf')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[29,0],[30,0]],"newRange":[[29,0],[29,0]],"oldText":"      action = TeachersPet::Actions::Base.new(token: nil)\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      action = TeachersPet::Actions::Base.new(password: 'sdf')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[29,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[29,0],[30,0]],"newRange":[[29,0],[29,0]],"oldText":"      action = TeachersPet::Actions::Base.new(token: 'sdf')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(token: '')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      action = TeachersPet::Actions::Base.new\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(:password '')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      action = TeachersPet::Actions::Base.new(token: '')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(password: 'abc123')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      action = TeachersPet::Actions::Base.new(:password '')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[29,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(token: 'abc123')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[29,0],[30,0]],"newRange":[[29,0],[29,0]],"oldText":"      action = TeachersPet::Actions::Base.new\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(password: 'asdf')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      action = TeachersPet::Actions::Base.new(password: 'abc123')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[29,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(token: 'asdf')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[29,0],[30,0]],"newRange":[[29,0],[29,0]],"oldText":"      action = TeachersPet::Actions::Base.new(token: 'abc123')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[25,0]],"oldText":"","newText":"      # action = TeachersPet::Actions::Base.new(password: 'asdf')\n      # STDOUT.should_receive(:print).with('Password: ')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[25,0],[27,0]],"newRange":[[25,0],[25,0]],"oldText":"      action = TeachersPet::Actions::Base.new(password: 'asdf')\n      STDOUT.should_receive(:print).with('Password: ')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[30,0]],"oldText":"","newText":"      # action = TeachersPet::Actions::Base.new(token: 'asdf')\n      # STDOUT.should_receive(:print).with('Token: ')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[30,0],[32,0]],"newRange":[[30,0],[30,0]],"oldText":"      action = TeachersPet::Actions::Base.new(token: 'asdf')\n      STDOUT.should_receive(:print).with('Token: ')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"      binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[24,0]],"newRange":[[23,0],[23,0]],"oldText":"      binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[11,0]],"oldText":"","newText":"    # it \"complains if the password and token are missing\" do\n    #   action = TeachersPet::Actions::Base.new\n    #   expect {\n    #     action.octokit_config\n    #   }.to raise_error(Thor::RequiredArgumentMissingError, /--password.+--token/)\n    # end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[11,0],[17,0]],"newRange":[[11,0],[11,0]],"oldText":"    it \"complains if the password and token are missing\" do\n      action = TeachersPet::Actions::Base.new\n      expect {\n        action.octokit_config\n      }.to raise_error(Thor::RequiredArgumentMissingError, /--password.+--token/)\n    end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[12,0],[12,0]],"newRange":[[12,0],[16,0]],"oldText":"","newText":"    # it \"uses the password if provided\" do\n    #   action = TeachersPet::Actions::Base.new(password: 'abc123')\n    #   expect(action.octokit_config[:password]).to eq('abc123')\n    # end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[16,0],[20,0]],"newRange":[[16,0],[16,0]],"oldText":"    it \"uses the password if provided\" do\n      action = TeachersPet::Actions::Base.new(password: 'abc123')\n      expect(action.octokit_config[:password]).to eq('abc123')\n    end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[17,0],[17,0]],"newRange":[[17,0],[21,0]],"oldText":"","newText":"    # it \"uses the token if provided\" do\n    #   action = TeachersPet::Actions::Base.new(token: 'abc123')\n    #   expect(action.octokit_config[:access_token]).to eq('abc123')\n    # end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,0],[25,0]],"newRange":[[21,0],[21,0]],"oldText":"    it \"uses the token if provided\" do\n      action = TeachersPet::Actions::Base.new(token: 'abc123')\n      expect(action.octokit_config[:access_token]).to eq('abc123')\n    end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[25,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(password: '')\n      STDOUT.should_receive(:print).with('Password: ')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[25,0],[27,0]],"newRange":[[25,0],[25,0]],"oldText":"      # action = TeachersPet::Actions::Base.new(password: 'asdf')\n      # STDOUT.should_receive(:print).with('Password: ')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[26,0]],"oldText":"","newText":"    # it \"prompts for a password if the password flag is passed but the given\" do\n    #   action = TeachersPet::Actions::Base.new(password: '')\n    #   STDOUT.should_receive(:print).with('Password: ')\n    # end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[26,0],[30,0]],"newRange":[[26,0],[26,0]],"oldText":"    it \"prompts for a password if the password flag is passed but the given\" do\n      action = TeachersPet::Actions::Base.new(password: '')\n      STDOUT.should_receive(:print).with('Password: ')\n    end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[43,0]],"oldText":"","newText":"  # describe '#read_file' do\n  #   it \"returns a hash of usernames by team name\" do\n  #     action = TeachersPet::Actions::Base.new\n  #     result = action.read_file(fixture_path('teams'))\n  #     expect(result).to eq(\n  #       'studentteam1' => %w(teststudent1 teststudent2)\n  #     )\n  #   end\n  # end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[43,0],[52,0]],"newRange":[[43,0],[43,0]],"oldText":"  describe '#read_file' do\n    it \"returns a hash of usernames by team name\" do\n      action = TeachersPet::Actions::Base.new\n      result = action.read_file(fixture_path('teams'))\n      expect(result).to eq(\n        'studentteam1' => %w(teststudent1 teststudent2)\n      )\n    end\n  end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[31,0]],"oldText":"","newText":"    # it \"prompts for a token if the token flag is passed but the given\" do\n    #   # action = TeachersPet::Actions::Base.new(token: 'asdf')\n    #   # STDOUT.should_receive(:print).with('Token: ')\n    # end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[31,0],[35,0]],"newRange":[[31,0],[31,0]],"oldText":"    it \"prompts for a token if the token flag is passed but the given\" do\n      # action = TeachersPet::Actions::Base.new(token: 'asdf')\n      # STDOUT.should_receive(:print).with('Token: ')\n    end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[26,0]],"oldText":"","newText":"    it \"prompts for a password if the password flag is passed but the given\" do\n      action = TeachersPet::Actions::Base.new(password: '')\n      STDOUT.should_receive(:print).with('Password: ')\n    end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[26,0],[30,0]],"newRange":[[26,0],[26,0]],"oldText":"    # it \"prompts for a password if the password flag is passed but the given\" do\n    #   action = TeachersPet::Actions::Base.new(password: '')\n    #   STDOUT.should_receive(:print).with('Password: ')\n    # end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[25,0]],"oldText":"","newText":"      binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[26,0]],"oldText":"","newText":"      STDOUT.expects(:print).with('Password: ')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[26,0],[27,0]],"newRange":[[26,0],[26,0]],"oldText":"      STDOUT.should_receive(:print).with('Password: ')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[26,0]],"oldText":"","newText":"      STDOUT.should_receive(:print).with('Password: ')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[26,0],[27,0]],"newRange":[[26,0],[26,0]],"oldText":"      STDOUT.expects(:print).with('Password: ')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"      binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[0,0],[1,0]],"newRange":[[0,0],[0,0]],"oldText":"require 'pry'\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[10,0]],"oldText":"","newText":"    it \"complains if the password and token are missing\" do\n      action = TeachersPet::Actions::Base.new\n      expect {\n        action.octokit_config\n      }.to raise_error(Thor::RequiredArgumentMissingError, /--password.+--token/)\n    end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[10,0],[16,0]],"newRange":[[10,0],[10,0]],"oldText":"    # it \"complains if the password and token are missing\" do\n    #   action = TeachersPet::Actions::Base.new\n    #   expect {\n    #     action.octokit_config\n    #   }.to raise_error(Thor::RequiredArgumentMissingError, /--password.+--token/)\n    # end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[11,0],[11,0]],"newRange":[[11,0],[15,0]],"oldText":"","newText":"    it \"uses the password if provided\" do\n      action = TeachersPet::Actions::Base.new(password: 'abc123')\n      expect(action.octokit_config[:password]).to eq('abc123')\n    end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[15,0],[19,0]],"newRange":[[15,0],[15,0]],"oldText":"    # it \"uses the password if provided\" do\n    #   action = TeachersPet::Actions::Base.new(password: 'abc123')\n    #   expect(action.octokit_config[:password]).to eq('abc123')\n    # end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[20,0]],"oldText":"","newText":"    it \"uses the token if provided\" do\n      action = TeachersPet::Actions::Base.new(token: 'abc123')\n      expect(action.octokit_config[:access_token]).to eq('abc123')\n    end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[20,0],[24,0]],"newRange":[[20,0],[20,0]],"oldText":"    # it \"uses the token if provided\" do\n    #   action = TeachersPet::Actions::Base.new(token: 'abc123')\n    #   expect(action.octokit_config[:access_token]).to eq('abc123')\n    # end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[26,0],[26,0]],"newRange":[[26,0],[30,0]],"oldText":"","newText":"    it \"prompts for a token if the token flag is passed but the given\" do\n      # action = TeachersPet::Actions::Base.new(token: 'asdf')\n      # STDOUT.should_receive(:print).with('Token: ')\n    end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[30,0],[34,0]],"newRange":[[30,0],[30,0]],"oldText":"    # it \"prompts for a token if the token flag is passed but the given\" do\n    #   # action = TeachersPet::Actions::Base.new(token: 'asdf')\n    #   # STDOUT.should_receive(:print).with('Token: ')\n    # end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[29,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(token: 'asdf')\n      STDOUT.should_receive(:print).with('Token: ')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[29,0],[31,0]],"newRange":[[29,0],[29,0]],"oldText":"      # action = TeachersPet::Actions::Base.new(token: 'asdf')\n      # STDOUT.should_receive(:print).with('Token: ')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[33,0],[33,0]],"newRange":[[33,0],[42,0]],"oldText":"","newText":"  describe '#read_file' do\n    it \"returns a hash of usernames by team name\" do\n      action = TeachersPet::Actions::Base.new\n      result = action.read_file(fixture_path('teams'))\n      expect(result).to eq(\n        'studentteam1' => %w(teststudent1 teststudent2)\n      )\n    end\n  end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[42,0],[51,0]],"newRange":[[42,0],[42,0]],"oldText":"  # describe '#read_file' do\n  #   it \"returns a hash of usernames by team name\" do\n  #     action = TeachersPet::Actions::Base.new\n  #     result = action.read_file(fixture_path('teams'))\n  #     expect(result).to eq(\n  #       'studentteam1' => %w(teststudent1 teststudent2)\n  #     )\n  #   end\n  # end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[28,0]],"oldText":"","newText":"      action = TeachersPet::Actions::Base.new(token: '')\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[29,0]],"newRange":[[28,0],[28,0]],"oldText":"      action = TeachersPet::Actions::Base.new(token: 'asdf')\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mark/src/education/teachers_pet/spec/actions/base_spec.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9c1e6455ae0f0ee2befeb17a3fc2926b1b506d6a","deserializer":"TextBuffer"},{"text":"require 'active_support/core_ext/hash/keys'\nrequire 'io/console'\nrequire 'octokit'\nrequire 'pry'\nrequire_relative File.join('..', 'configuration')\n\nmodule TeachersPet\n  module Actions\n    class Base\n      attr_reader :client, :options\n\n      def initialize(opts={})\n        @options = opts.symbolize_keys\n      end\n\n      def octokit_config\n        opts = {\n          api_endpoint: self.options[:api],\n          web_endpoint: self.options[:web],\n          login: self.options[:username],\n          # Organizations can get big, pull in all pages\n          auto_paginate: true\n        }\n\n        if self.options[:token]\n          if self.options[:token].length > 0\n            opts[:access_token] = self.options[:token]\n          else\n            print 'Token: '\n            token = STDIN.noecho(&:gets).chomp\n            opts[:access_token] = token if token.length > 0\n          end\n        elsif self.options[:password]\n          if self.options[:password].length > 0\n            opts[:password] = self.options[:password]\n          else\n            print 'Password: '\n            token = STDIN.noecho(&:gets).chomp\n            opts[:password] = password if password.length > 0\n          end\n        else\n          raise Thor::RequiredArgumentMissingError.new(\"No value provided for option --password or --token\")\n        end\n\n        opts\n      end\n\n      def init_client\n        puts \"=\" * 50\n        puts \"Authenticating to GitHub...\"\n        octokit = Octokit::Client.new(self.octokit_config)\n        @client = TeachersPet::ClientDecorator.new(octokit)\n      end\n\n      def read_file(filename)\n        map = Hash.new\n        File.open(filename).each_line do |team|\n          # Team can be a single user, or a team name and multiple users\n          # Trim whitespace, otherwise issues occur\n          team.strip!\n          items = team.split(' ')\n          items.each do |item|\n            abort(\"No users can be named 'owners' (in any case)\") if 'owners'.eql?(item.downcase)\n          end\n\n          if map[items[0]].nil?\n            map[items[0]] = Array.new\n            puts \" -> #{items[0]}\"\n            if (items.size > 1)\n              print \"  \\\\-> members: \"\n              1.upto(items.size - 1) do |i|\n                print \"#{items[i]} \"\n                map[items[0]] << items[i]\n              end\n              print \"\\n\"\n            else\n              map[items[0]] << items[0]\n            end\n          end\n        end\n\n        map\n      end\n\n      def read_students_file\n        student_file = self.options[:students]\n        puts \"Loading students:\"\n        read_file(student_file)\n      end\n\n      def read_members_file\n        file = self.options[:members]\n        puts \"Loading members to add:\"\n        read_file(file).keys\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[24,8],[42,11]],"tailed":true,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":33,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[25,0]],"oldText":"","newText":"        binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"        binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[3,0],[4,0]],"newRange":[[3,0],[3,0]],"oldText":"require 'pry'\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[29,0]],"oldText":"","newText":"          binding.\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,0],[29,0]],"newRange":[[28,0],[28,0]],"oldText":"          binding.\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"        if self.options[:token] && self.option[:token].length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"        if self.options[:token]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[28,0]],"oldText":"","newText":"        elsif self.options.has_key?(:token) &&\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[29,0]],"newRange":[[28,0],[28,0]],"oldText":"        elsif self.options.has_key?(:token)\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[26,0]],"oldText":"","newText":"        elsif self.options[:password] && self.option[:password].length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[26,0],[27,0]],"newRange":[[26,0],[26,0]],"oldText":"        elsif self.options[:password]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[28,0]],"oldText":"","newText":"        elsif self.options.has_key?(:token)\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[29,0]],"newRange":[[28,0],[28,0]],"oldText":"        elsif self.options.has_key?(:token) &&\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[29,0]],"oldText":"","newText":"          binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[3,0],[3,0]],"newRange":[[3,0],[4,0]],"oldText":"","newText":"require 'pry'\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[3,0],[4,0]],"newRange":[[3,0],[3,0]],"oldText":"require 'pry'\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"        if self.options[:token]\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"        if self.options[:token] && self.option[:token].length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[26,0]],"oldText":"","newText":"        elsif self.options[:password]\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[26,0],[27,0]],"newRange":[[26,0],[26,0]],"oldText":"        elsif self.options[:password] && self.option[:password].length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[35,0]],"oldText":"","newText":"        # elsif self.options.has_key?(:token)\n        #   print 'Token: '\n        #   token = STDIN.noecho(&:gets).chomp\n        #   opts[:access_token] = token if token.length > 0\n        # elsif self.options.has_key?(:password)\n        #   print 'Password: '\n        #   token = STDIN.noecho(&:gets).chomp\n        #   opts[:password] = password if password.length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[35,0],[44,0]],"newRange":[[35,0],[35,0]],"oldText":"        elsif self.options.has_key?(:token)\n          binding.pry\n          print 'Token: '\n          token = STDIN.noecho(&:gets).chomp\n          opts[:access_token] = token if token.length > 0\n        elsif self.options.has_key?(:password)\n          print 'Password: '\n          token = STDIN.noecho(&:gets).chomp\n          opts[:password] = password if password.length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[35,0]],"oldText":"","newText":"        elsif self.options.has_key?(:token)\n          print 'Token: '\n          token = STDIN.noecho(&:gets).chomp\n          opts[:access_token] = token if token.length > 0\n        elsif self.options.has_key?(:password)\n          print 'Password: '\n          token = STDIN.noecho(&:gets).chomp\n          opts[:password] = password if password.length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[35,0],[43,0]],"newRange":[[35,0],[35,0]],"oldText":"        # elsif self.options.has_key?(:token)\n        #   print 'Token: '\n        #   token = STDIN.noecho(&:gets).chomp\n        #   opts[:access_token] = token if token.length > 0\n        # elsif self.options.has_key?(:password)\n        #   print 'Password: '\n        #   token = STDIN.noecho(&:gets).chomp\n        #   opts[:password] = password if password.length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"        if self.options[:token] && self.options[:token].length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"        if self.options[:token]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[26,0]],"oldText":"","newText":"        elsif self.options[:password] && self.options[:token].length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[26,0],[27,0]],"newRange":[[26,0],[26,0]],"oldText":"        elsif self.options[:password]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"        if self.options[:token]\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"        if self.options[:token] && self.options[:token].length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[26,0]],"oldText":"","newText":"        elsif self.options[:password]\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[26,0],[27,0]],"newRange":[[26,0],[26,0]],"oldText":"        elsif self.options[:password] && self.options[:token].length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"        binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[25,0]],"oldText":"","newText":"        if self.options[:token] && self.options[:token].length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[25,0],[26,0]],"newRange":[[25,0],[25,0]],"oldText":"        if self.options[:token]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[26,0],[26,0]],"newRange":[[26,0],[27,0]],"oldText":"","newText":"        elsif self.options[:password] && self.options[:password].length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[27,0],[28,0]],"newRange":[[27,0],[27,0]],"oldText":"        elsif self.options[:password]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"        # binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"        binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[24,0]],"newRange":[[23,0],[23,0]],"oldText":"        # binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[29,0]],"oldText":"","newText":"          binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,0],[29,0]],"newRange":[[28,0],[28,0]],"oldText":"          binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"        binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[24,0]],"newRange":[[23,0],[23,0]],"oldText":"        binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"        binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[3,0],[3,0]],"newRange":[[3,0],[4,0]],"oldText":"","newText":"require 'pry'\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"        binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[25,0]],"oldText":"","newText":"        binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"        binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[29,0],[29,0]],"newRange":[[29,0],[30,0]],"oldText":"","newText":"          binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[29,0],[30,0]],"newRange":[[29,0],[29,0]],"oldText":"          binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[3,0],[4,0]],"newRange":[[3,0],[3,0]],"oldText":"require 'pry'\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[3,0],[3,0]],"newRange":[[3,0],[4,0]],"oldText":"","newText":"require 'pry'\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[25,0]],"oldText":"","newText":"        binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"        binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[29,0],[29,0]],"newRange":[[29,0],[30,0]],"oldText":"","newText":"          binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[29,0],[30,0]],"newRange":[[29,0],[29,0]],"oldText":"          binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[32,0]],"oldText":"","newText":"        if self.options[:token]\n          if self.options[:token].length > 0\n            opts[:access_token] = self.options[:token]\n          else\n            print 'Token: '\n            token = STDIN.noecho(&:gets).chomp\n            opts[:access_token] = token if token.length > 0\n          end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[32,0],[34,0]],"newRange":[[32,0],[32,0]],"oldText":"        if self.options[:token] && self.options[:token].length > 0\n          opts[:access_token] = self.options[:token]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[32,0],[32,0]],"newRange":[[32,0],[34,0]],"oldText":"","newText":"        elsif self.options[:password]\n          if self.options[:password].length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[34,0],[35,0]],"newRange":[[34,0],[34,0]],"oldText":"        elsif self.options[:password] && self.options[:password].length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[36,0]],"oldText":"","newText":"\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[35,0]],"oldText":"","newText":"            opts[:password] = self.options[:password]\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[35,0],[36,0]],"newRange":[[35,0],[35,0]],"oldText":"          opts[:password] = self.options[:password]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[36,0]],"oldText":"","newText":"          else\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[36,0],[42,0]],"newRange":[[36,0],[36,0]],"oldText":"\n        elsif self.options.has_key?(:token)\n          print 'Token: '\n          token = STDIN.noecho(&:gets).chomp\n          opts[:access_token] = token if token.length > 0\n        elsif self.options.has_key?(:password)\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[40,0]],"oldText":"","newText":"          end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[36,0],[36,0]],"newRange":[[36,0],[39,0]],"oldText":"","newText":"            print 'Password: '\n            token = STDIN.noecho(&:gets).chomp\n            opts[:password] = password if password.length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[39,0],[42,0]],"newRange":[[39,0],[39,0]],"oldText":"          print 'Password: '\n          token = STDIN.noecho(&:gets).chomp\n          opts[:password] = password if password.length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[25,0]],"oldText":"","newText":"        binding.pry\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[25,0]],"oldText":"","newText":"\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[25,0],[26,0]],"newRange":[[25,0],[25,0]],"oldText":"        binding.pry\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[26,0],[27,0]],"newRange":[[26,0],[26,0]],"oldText":"          if self.options[:token].length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[27,0],[32,0]],"newRange":[[27,0],[27,0]],"oldText":"          else\n            print 'Token: '\n            token = STDIN.noecho(&:gets).chomp\n            opts[:access_token] = token if token.length > 0\n          end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[29,0]],"newRange":[[28,0],[28,0]],"oldText":"          if self.options[:password].length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[29,0],[29,0]],"newRange":[[29,0],[34,0]],"oldText":"","newText":"        elsif self.options.has_key?(:token)\n            print 'Token: '\n              token = STDIN.noecho(&:gets).chomp\n                opts[:access_token] = token if token.length > 0\n        elsif self.options.has_key?(:password)\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[34,0],[35,0]],"newRange":[[34,0],[34,0]],"oldText":"          else\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[37,0]],"oldText":"","newText":"              token = STDIN.noecho(&:gets).chomp\n                opts[:password] = password if password.length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[37,0],[40,0]],"newRange":[[37,0],[37,0]],"oldText":"            token = STDIN.noecho(&:gets).chomp\n            opts[:password] = password if password.length > 0\n          end\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[38,0],[38,0]],"newRange":[[38,0],[39,0]],"oldText":"","newText":"            raise Thor::RequiredArgumentMissingError.new(\"No value provided for option --password or --token\")\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[39,0],[40,0]],"newRange":[[39,0],[39,0]],"oldText":"          raise Thor::RequiredArgumentMissingError.new(\"No value provided for option --password or --token\")\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,0],[41,0]],"newRange":[[40,0],[40,0]],"oldText":"\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[26,0],[26,0]],"newRange":[[26,0],[27,0]],"oldText":"","newText":"          opts[:access_token] = self.options[:token]\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[27,0],[28,0]],"newRange":[[27,0],[27,0]],"oldText":"            opts[:access_token] = self.options[:token]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[29,0]],"oldText":"","newText":"          opts[:password] = self.options[:password]\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[29,0],[30,0]],"newRange":[[29,0],[29,0]],"oldText":"            opts[:password] = self.options[:password]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[30,0],[30,0]],"newRange":[[30,0],[33,0]],"oldText":"","newText":"          print 'Token: '\n          token = STDIN.noecho(&:gets).chomp\n          opts[:access_token] = token if token.length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[33,0],[36,0]],"newRange":[[33,0],[33,0]],"oldText":"            print 'Token: '\n              token = STDIN.noecho(&:gets).chomp\n                opts[:access_token] = token if token.length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[37,0]],"oldText":"","newText":"          print 'Password: '\n          token = STDIN.noecho(&:gets).chomp\n          opts[:password] = password if password.length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[37,0],[40,0]],"newRange":[[37,0],[37,0]],"oldText":"            print 'Password: '\n              token = STDIN.noecho(&:gets).chomp\n                opts[:password] = password if password.length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[38,0],[38,0]],"newRange":[[38,0],[39,0]],"oldText":"","newText":"          raise Thor::RequiredArgumentMissingError.new(\"No value provided for option --password or --token\")\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[39,0],[40,0]],"newRange":[[39,0],[39,0]],"oldText":"            raise Thor::RequiredArgumentMissingError.new(\"No value provided for option --password or --token\")\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[41,0]],"oldText":"","newText":"\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[24,0],[25,0]],"newRange":[[24,0],[24,0]],"oldText":"\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[26,0]],"oldText":"","newText":"          if self.options[:token].length > 0\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[32,0]],"oldText":"","newText":"          else\n            print 'Token: '\n            token = STDIN.noecho(&:gets).chomp\n            opts[:access_token] = token if token.length > 0\n          end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[35,0],[38,0]],"newRange":[[35,0],[35,0]],"oldText":"          print 'Token: '\n          token = STDIN.noecho(&:gets).chomp\n          opts[:access_token] = token if token.length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[26,0],[26,0]],"newRange":[[26,0],[27,0]],"oldText":"","newText":"            opts[:access_token] = self.options[:token]\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[27,0],[28,0]],"newRange":[[27,0],[27,0]],"oldText":"          opts[:access_token] = self.options[:token]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[33,0],[33,0]],"newRange":[[33,0],[40,0]],"oldText":"","newText":"          if self.options[:password].length > 0\n            opts[:password] = self.options[:password]\n          else\n            print 'Password: '\n            token = STDIN.noecho(&:gets).chomp\n            opts[:password] = password if password.length > 0\n          end\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,0],[41,0]],"newRange":[[40,0],[40,0]],"oldText":"          opts[:password] = self.options[:password]\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[42,0],[45,0]],"newRange":[[42,0],[42,0]],"oldText":"          print 'Password: '\n          token = STDIN.noecho(&:gets).chomp\n          opts[:password] = password if password.length > 0\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[40,0],[42,0]],"newRange":[[40,0],[40,0]],"oldText":"        elsif self.options.has_key?(:token)\n        elsif self.options.has_key?(:password)\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mark/src/education/teachers_pet/lib/teachers_pet/actions/base.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"0a5f0b85e6448bd9235d51390bc6edde2471a20d","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":29,"softTabs":true,"displayBuffer":{"id":30,"softWrap":false,"editorWidthInChars":153,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mark/src/education/teachers_pet/spec/actions/base_spec.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":33,"softTabs":true,"displayBuffer":{"id":34,"softWrap":false,"editorWidthInChars":153,"scrollTop":150,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mark/src/education/teachers_pet/lib/teachers_pet/actions/base.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/mark/src/education/teachers_pet/lib/teachers_pet/actions/base.rb","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"html2haml":{},"fuzzy-finder":{"/Users/mark/src/education/teachers_pet/spec/actions/base_spec.rb":1404255276091,"/Users/mark/src/education/teachers_pet/lib/teachers_pet/actions/base.rb":1404255276659},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":3157983},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/mark/src/education/teachers_pet/lib","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}