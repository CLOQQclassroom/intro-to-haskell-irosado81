{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":1440,"height":874},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/mark/src/square/maximum-awesome","buffers":[{"text":"# use C-a, since it's on the home row and easier to hit than C-b\nset-option -g prefix C-a\nunbind-key C-a\nbind-key C-a send-prefix\nset -g base-index 1\n\n# Easy config reload\nbind-key R source-file ~/.tmux.conf \\; display-message \"tmux.conf reloaded.\"\n\n# vi is good\nsetw -g mode-keys vi\n\n# mouse behavior\nsetw -g mode-mouse on\nset -g mouse-select-pane on\nset -g mouse-resize-pane on\n\nset-option -g default-terminal screen-256color\n\nbind-key : command-prompt\nbind-key r refresh-client\nbind-key L clear-history\n\nbind-key space next-window\nbind-key bspace previous-window\nbind-key enter next-layout\n\n# use vim-like keys for splits and windows\nbind-key v split-window -h\nbind-key s split-window -v\nbind-key h select-pane -L\nbind-key j select-pane -D\nbind-key k select-pane -U\nbind-key l select-pane -R\n\n# smart pane switching with awareness of vim splits\nbind -n C-h run \"(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\\/)vim$' && tmux send-keys C-h) || tmux select-pane -L\"\nbind -n C-j run \"(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\\/)vim$' && tmux send-keys C-j) || tmux select-pane -D\"\nbind -n C-k run \"(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\\/)vim$' && tmux send-keys C-k) || tmux select-pane -U\"\nbind -n C-l run \"(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\\/)vim$' && tmux send-keys C-l) || tmux select-pane -R\"\nbind -n C-\\ run \"(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\\/)vim$' && tmux send-keys 'C-\\\\') || tmux select-pane -l\"\nbind C-l send-keys 'C-l'\n\nbind-key C-o rotate-window\n\nbind-key + select-layout main-horizontal\nbind-key = select-layout main-vertical\nset-window-option -g other-pane-height 25\nset-window-option -g other-pane-width 80\n\nbind-key a last-pane\nbind-key q display-panes\nbind-key c new-window\nbind-key t next-window\nbind-key T previous-window\n\nbind-key [ copy-mode\nbind-key ] paste-buffer\n\n# Setup 'v' to begin selection as in Vim\nbind-key -t vi-copy v begin-selection\nbind-key -t vi-copy y copy-pipe \"reattach-to-user-namespace pbcopy\"\n\n# Update default binding of `Enter` to also use copy-pipe\nunbind -t vi-copy Enter\nbind-key -t vi-copy Enter copy-pipe \"reattach-to-user-namespace pbcopy\"\n\nset-window-option -g display-panes-time 1500\n\n# Status Bar\nset-option -g status-interval 1\nset-option -g status-left ''\nset-option -g status-right '%l:%M%p'\nset-window-option -g window-status-current-fg magenta\nset-option -g status-fg default\n\n# Status Bar solarized-dark (default)\nset-option -g status-bg black\nset-option -g pane-active-border-fg black\nset-option -g pane-border-fg black\n\n# Status Bar solarized-light\nif-shell \"[ \\\"$COLORFGBG\\\" = \\\"11;15\\\" ]\" \"set-option -g status-bg white\"\nif-shell \"[ \\\"$COLORFGBG\\\" = \\\"11;15\\\" ]\" \"set-option -g pane-active-border-fg white\"\nif-shell \"[ \\\"$COLORFGBG\\\" = \\\"11;15\\\" ]\" \"set-option -g pane-border-fg white\"\n\n# Set window notifications\nsetw -g monitor-activity on\nset -g visual-activity on\n\n# Enable native Mac OS X copy/paste\nset-option -g default-command \"/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'\"\n\n# Allow the arrow key to be used immediately after changing windows\nset-option -g repeat-time 0\n\nsource-file ~/.tmux.conf.local\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":75,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mark/src/square/maximum-awesome/tmux.conf","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"302d56d33f57e3f3cb821ef9e5b69eb7311a51a0","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"deserializer":"SettingsView","version":2,"activePanelName":"Packages","uri":"atom://config"},{"id":75,"softTabs":true,"displayBuffer":{"id":76,"softWrap":false,"editorWidthInChars":153,"scrollTop":1170,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/mark/src/square/maximum-awesome/tmux.conf","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/mark/src/square/maximum-awesome/tmux.conf","focused":false,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"html2haml":{},"fuzzy-finder":{"/Users/mark/src/square/maximum-awesome/tmux.conf":1403481340883},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":366319},"tree-view":{"directoryExpansionStates":{"vim":{}},"selectedPath":"/Users/mark/src/square/maximum-awesome/tmux.conf","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}