{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":1440,"height":874},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/mark/src/RussellT/581137f06e5ae2c2be83","buffers":[{"text":"/*\nFile: rectangles.cpp\nCreated by: Alex Tareshawty\nCreation Date: 4/14/2014\nSynopsis: This program takes a name of a rectangle, it's bottom left\ncoordinate, length and width, and says stuff about it\n*/\n\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nclass Point\n{\n  private:\n    double px;\n    double py;\n\n  public:\n    void setX(const double x);\n    void setY(const double y);\n    double getX() const;\n    double getY() const;\n};\n\nclass Rectangle\n{\n  private:\n    string name;\n    Point blPoint;\n    double length, height;\n\n  public:\n    // member functions\n    void setName(const string & inName);\n    void setBottomLeft(const double x, const double y);\n    void setDimensions(const double inLength, const double inHeight);\n\n    string getName() const;\n    Point getBottomLeft() const;\n    double getLength() const;\n    double getHeight() const;\n\n    double area() const;\n    double perimeter() const;\n    Point midPoint() const;\n    void scaleBy2();\n    void display() const;\n};\n\n// FUNCTION PROTOTYPES GO HERE:\nvoid welcome_banner();\nbool user_input(const string & prompt, const string & input_error,\n    const string & prev_error, string & input, vector<Rectangle> & names);\nvoid read_coord(const string & prompt, double & x, double & y);\nvoid read_sides(const string & prompt, double & length, double & height);\n\n\nint main()\n{\n  // Define your local variables, e.g. a vector of class Rectangle\n  Rectangle rect;\n  vector<Rectangle> names;\n  bool check;\n  string input_error = \"Invalid input. Type 'rec' following by the name of 'stop' if done.\";\n  string prev_error = \"This name is already being used!\";\n  string input = \"\";\n  int count(0);\n  double x, y, length, height;\n\n\n  // Display welcome banner\n  welcome_banner();\n\n  /* Prompt user for first rectangle or 'stop' */\n  // WHILE user input is invalid\n  // Display \"Try again! \"\n  do {\n    check = user_input(\"Enter the name of the first rectangle: \", input_error, prev_error, input, names);\n  } while (!check);\n\n  // IF user input is not 'stop'\n  // Extract rectangle name from user input\n  // Prompt for bottom left point\n  // Prompt for length and height\n  // Add rectangle to the rectangle list\n  if (input != \"stop\")\n  {\n    rect.setName(input.substr(4,input.length()-4));\n    cout << \"Enter \" << input.substr(4,input.length()-4) << \"'s \";\n    read_coord(\"bottom left x and y coords: \", x, y);\n    rect.setBottomLeft(x,y);\n    cout << \"Enter \" << input.substr(4,input.length()-4) << \"'s \";\n    read_sides(\"length and height: \", length, height);\n    rect.setDimensions(length, height);\n    names.push_back(rect);\n  }\n\n  /* Prompt user for next rectangle or 'stop' */\n  // WHILE user input is not 'stop'\n  // Display \"Thank you! \"\n  cout << \"Input is: \" << input << endl;\n  while (input != \"stop\")\n  {\n    cout << \"Thank you! \";\n    check = user_input(\"Enter the name of the next rectangle: \", input_error, prev_error, input, names);\n  }\n\n  // WHILE user input is invalid\n  // Display \"Try again! \"\n  // IF user input is not 'stop'\n  // Extract rectangle name from user input\n  // Prompt for bottom left point\n  // Prompt for length and height\n  // Add rectangle to the rectangle list\n\n  // IF the rectangle list is not empty\n  // Display all rectangles in the rectangle list\n  // ELSE\n  // Display that no rectangles are in the list\n\n  return 0;\n}\n\n// FUNCTION DEFINITIONS GO HERE:\nvoid welcome_banner()\n{\n  cout << \"Welcome! Create your own list of rectangles.\" << endl;\n  cout << \"You will be asked to provide information about each rectangle in your list by name.\" << endl;\n  cout << \"Type the word 'stop' for the rectangle name when you are done.\" << endl;\n  cout << endl;\n}\n\nbool user_input(const string & prompt, const string & input_error,\n    const string & prev_error, string & input, vector<Rectangle> & names)\n{\n  cout << prompt;\n  getline(cin, input);\n  for (int i = 0; i < names.size(); i++)\n  {\n    if (input.substr(4,input.length()-1) == names[i].getName())\n    {\n      cout << prev_error << endl;\n      return true;\n    }\n  }\n  if (input.substr(0,4) == \"rec \" )\n  {\n    if (input[4] >= 97 && input[4] <= 122)\n    {\n      return true;\n    }\n    else\n    {\n      cout << input_error << endl;\n      cout << \"Try again! \" << prompt;\n      return false;\n    }\n  }\n  else if (input == \"stop\")\n  {\n    return true;\n  }\n  else\n  {\n    cout << input_error << endl;\n    cout << \"Try again! \" << prompt;\n    return false;\n  }\n}\nvoid read_coord(const string & prompt, double & x, double & y)\n{\n  cout << prompt;\n  cin >> x >> y;\n}\nvoid read_sides(const string & prompt, double & length, double & height)\n{\n  cout << prompt;\n  cin >> length >> height;\n  cout << endl;\n}\n\n\n\n\n// CLASS MEMBER FUNCTION DEFINITIONS GO HERE:\n\nvoid Point::setX(const double x)\n{\n  px = x;\n}\n\nvoid Point::setY(const double y)\n{\n  py = y;\n}\n\ndouble Point::getX() const\n{\n  return (px);\n}\n\ndouble Point::getY() const\n{\n  return (py);\n}\n\nvoid Rectangle::setName(const string & inName)\n{\n  name = inName;\n}\n\nvoid Rectangle::setBottomLeft(const double x, const double y)\n{\n  blPoint.setX(x);\n  blPoint.setY(y);\n}\n\nvoid Rectangle::setDimensions(const double inLength, const double inHeight)\n{\n  length = inLength;\n  height = inHeight;\n}\n\nstring Rectangle::getName() const\n{\n  return name;\n}\n\nPoint Rectangle::getBottomLeft() const\n{\n  return blPoint;\n}\n\ndouble Rectangle::getLength() const\n{\n  return length;\n}\n\ndouble Rectangle::getHeight() const\n{\n  return height;\n}\n\ndouble Rectangle::area() const\n{\n  return (height*length);\n}\n\ndouble Rectangle::perimeter() const\n{\n  return (2*height + 2*length);\n}\n\nPoint Rectangle::midPoint() const\n{\n  Point p;\n  p.setX(getLength()/2 + p.getX());\n  p.setY(getHeight()/2 + p.getY());\n  return p;\n\n}\n\nvoid Rectangle::scaleBy2()\n{\n\n}\n\nvoid Rectangle::display() const\n{\n  cout << \"Rectangle '\" << getName() << \"': Location is (\" <<\n    blPoint.getX() << \", \" << blPoint.getY() << \"), length is \" <<\n    getLength() << \", height is \" << getHeight() << \"; Area is \" <<\n    area() << \", perimeter is \" << perimeter() << \", midpoint is located at (\";\n\n}\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[278,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":7,"goalBufferRange":null,"preserveFolds":true,"autoscroll":false},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/mark/src/RussellT/581137f06e5ae2c2be83/Rectangle_Homework.cpp","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"508b81589b6d6d8c3f841a867b8f4e6233b3bfd0","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":7,"softTabs":true,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":8,"softWrap":false,"editorWidthInChars":151,"tokenizedBuffer":{"bufferPath":"/Users/mark/src/RussellT/581137f06e5ae2c2be83/Rectangle_Homework.cpp","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"deserializer":"SettingsView","version":2,"activePanelName":"Settings","uri":"atom://config"}],"activeItemUri":"/Users/mark/src/RussellT/581137f06e5ae2c2be83/Rectangle_Homework.cpp","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/mark/src/RussellT/581137f06e5ae2c2be83/Rectangle_Homework.cpp":1397671164275},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":1833497},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/mark/src/RussellT/581137f06e5ae2c2be83/Rectangle_Homework.cpp","hasFocus":false,"attached":false,"scrollLeft":0,"scrollTop":0,"width":0}}}